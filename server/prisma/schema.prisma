generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model conversation {
  conversation_id   Int                 @id @default(autoincrement())
  conversation_name String              @db.VarChar(100)
  message           message[]
  user_conversation user_conversation[]
}

model message {
  message_id      Int          @id @default(autoincrement())
  conversation_id Int
  user_id         Int
  message_text    String       @db.Text
  created_at      DateTime     @default(now()) @db.Timestamp(0)
  conversation    conversation @relation(fields: [conversation_id], references: [conversation_id], onDelete: NoAction, onUpdate: NoAction, map: "message_ibfk_1")
  user            user         @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "message_ibfk_2")

  @@index([conversation_id], map: "conversation_id")
  @@index([user_id], map: "user_id")
}

model user {
  user_id           Int                 @id @default(autoincrement())
  username          String              @unique(map: "username") @db.VarChar(50)
  email             String              @unique(map: "email") @db.VarChar(100)
  password_hash     String              @db.VarChar(255)
  created_at        DateTime            @default(now()) @db.Timestamp(0)
  updated_at        DateTime?           @db.Timestamp(0)
  message           message[]
  user_conversation user_conversation[]
}

model user_conversation {
  user_convo_id   Int          @id @default(autoincrement())
  user_id         Int
  conversation_id Int
  user            user         @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "user_conversation_ibfk_1")
  conversation    conversation @relation(fields: [conversation_id], references: [conversation_id], onDelete: NoAction, onUpdate: NoAction, map: "user_conversation_ibfk_2")

  @@index([conversation_id], map: "conversation_id")
  @@index([user_id], map: "user_id")
}
